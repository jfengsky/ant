<?xml version="1.0"?>
<project name="refund" default="build">
    <dirname property="current.dir" file="${ant.file}"/>
    <echo>ant.file.path:${ant.file}</echo>
    <property name="uploader.dir" location="${current.dir}/"/>
    <echo>uploader.dir:${uploader.dir}</echo>
    <property name="compiler.path" location="${current.dir}/compiler.jar"/>
    <echo>compire.path:${compiler.path}</echo>
    <target name="build" depends="test1,test2,compirejs"/> <!-- build”依赖于“mkdir”和“concat”目标，那么ant会优先执行“mkdir”和“concat”然后才执行“build”-->
    <target name="test1">
        <echo>开始合并test1文件</echo>
        <concat destfile="assets/a_b.js">
            <path path="assets/mods/a.js"/>
            <path path="assets/mods/b.js"/>
        </concat>
    </target>
    <target name="test2">
        <echo>开始合并test2文件</echo>
        <concat destfile="assets/b_c.js">
            <path path="assets/mods/b.js"/>
            <path path="assets/mods/c.js"/>
        </concat>
    </target>
    <!--压缩js-->
    <target name="compirejs">
        <apply executable="java" verbose="true" dest="${uploader.dir}/assets/" failonerror="true" parallel="false">
            <fileset dir="${uploader.dir}/assets/" includes="*.js"/>
            <arg line="-jar"/>
            <arg path="${compiler.path}"/>
            <arg line="--charset utf8"/>
            <arg value="--warning_level"/>
            <arg value="QUIET"/>
            <arg value="--js"/>
            <srcfile/>
            <arg value="--js_output_file"/>
            <targetfile/>
            <mapper type="glob" from="*.js" to="*-min.js"/>
        </apply>
    </target>
</project>